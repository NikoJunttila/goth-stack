package reservation

import (
    "fmt"
    "time"
    "gothstack/app/views/components"
    "gothstack/app/views/layouts"
)

templ UserReservations(data ReservationPageData) {
    @layouts.BaseLayout() {
    @components.Navigation()
    <div class="container mx-auto p-4">
        <h1 class="text-2xl font-bold mb-4">My Reservations</h1>
        
        <a href="/reservations/create" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-4 inline-block">
            Make New Reservation
        </a>
        
        <div class="mt-4">
            if len(data.Reservations) == 0 {
                <p class="text-gray-600">You don't have any reservations yet.</p>
            } else {
                @ReservationsTable(data.Reservations)
            }
        </div>
    </div>
    }}

templ ReservationsTable(reservations []Reservation) {
    <div class="overflow-x-auto">
        <table class="min-w-full bg-white">
            <thead>
                <tr>
                    <th class="px-6 py-3 border-b-2 border-gray-300 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                        Time Slot
                    </th>
                    <th class="px-6 py-3 border-b-2 border-gray-300 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                        Date
                    </th>
                    <th class="px-6 py-3 border-b-2 border-gray-300 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                        Time
                    </th>
                    <th class="px-6 py-3 border-b-2 border-gray-300 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                        Status
                    </th>
                    <th class="px-6 py-3 border-b-2 border-gray-300 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">
                        Actions
                    </th>
                </tr>
            </thead>
            <tbody>
                for _, reservation := range reservations {
                    @ReservationRow(reservation)
                }
            </tbody>
        </table>
    </div>
}

templ ReservationRow(reservation Reservation) {
    <tr>
        <td class="px-6 py-4 whitespace-nowrap border-b border-gray-200">
            { reservation.TimeSlot.Title }
        </td>
        <td class="px-6 py-4 whitespace-nowrap border-b border-gray-200">
            { reservation.TimeSlot.StartTime.Format("Mon, Jan 2, 2006") }
        </td>
        <td class="px-6 py-4 whitespace-nowrap border-b border-gray-200">
            { reservation.TimeSlot.StartTime.Format("3:04 PM") } - { reservation.TimeSlot.EndTime.Format("3:04 PM") }
        </td>
        <td class="px-6 py-4 whitespace-nowrap border-b border-gray-200">
            @ReservationStatusBadge(reservation.Status)
        </td>
        <td class="px-6 py-4 whitespace-nowrap border-b border-gray-200">
            if reservation.Status == "confirmed" && reservation.TimeSlot.StartTime.After(time.Now()) {
                <button hx-post={ fmt.Sprintf("/reservations/cancel/%d", reservation.ID) }
                        hx-confirm="Are you sure you want to cancel this reservation?"
                        hx-target="closest div.container"
                        class="text-red-600 hover:text-red-900">
                    Cancel
                </button>
            }
        </td>
    </tr>
}

templ ReservationStatusBadge(status string) {
    if status == "confirmed" {
        <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">
            Confirmed
        </span>
    } else if status == "canceled" {
        <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800">
            Canceled
        </span>
    } else {
        <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-gray-100 text-gray-800">
            { status }
        </span>
    }
}